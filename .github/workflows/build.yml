name: Build and Test

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: [windows-latest]

    steps:   
    - uses: actions/checkout@v3

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
             
    - name: Restore NuGet Packages
      run: nuget restore SierraHOTAS.sln
    
    - name: Build
      run: msbuild SierraHOTAS.sln -m /p:Configuration=Release
    
#    - name: Test
#      run: packages\xunit.runner.console.2.4.1\tools\net472\xunit.console.exe tests\bin\Release\SierraHOTAS.Tests.dll -xml sierrahotas-test-results.xml
    
    - name: Test
      run: dotnet test tests\bin\Release\SierraHOTAS.Tests.dll --logger "html;logfilename=sierrahotas-test-results.html"

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Unit Test Results
        path: TestResults\sierrahotas-test-results.html
    
    - name: Create Setup
      run: msbuild SierraHOTASSetup\SierraHOTASSetup.wixproj -m /p:Configuration=Release
    
#    - name: Display structure of downloaded files
#      run: ls -R

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
    - name: Upload MSI
      id: upload-msi
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\SierraHOTASSetup\Installer\SierraHOTAS-Release-${{ github.run_number }}.msi
        asset_name: SierraHOTAS-Release-${{ github.run_number }}.msi 
        
    
