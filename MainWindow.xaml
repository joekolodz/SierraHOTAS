<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:SierraHOTAS.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Class="SierraHOTAS.MainWindow"
        mc:Ignorable="d"
        Title="Sierra HOTAS" Height="900" Width="1200">

    <Window.DataContext>
        <viewModel:HOTASCollectionViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
        <Style TargetType="Button" x:Key="MenuButton">
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style TargetType="Button" x:Key="MacroButton">
            <!--<Setter Property="Background" Value="WhiteSmoke"/>-->
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#2a7aa1"/>
            <Setter Property="Foreground" Value="Black"/>
            <!--<Setter Property="Margin" Value="2,0"/>-->
        </Style>
        <Style TargetType="Image" x:Key="MacroButtonImage">
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="21"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.1" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Height" Value="24"/>
                    <Setter Property="Width" Value="24"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- style for focusless listbox -->
        <Style x:Key="ListBoxItemStyleNoHighlighting" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- rounded corner for labels -->
        <Style  x:Key="RoundLabelStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListView color control for rows, highlight, and selected -->
        <Style TargetType="{x:Type ListViewItem}" x:Key="CustomListViewItem">
            <Style.Triggers>
                <!-- alternate row color -->
                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                    <Setter Property="Background" Value="#393939" />
                </Trigger>

                <!-- highlight color (need ControlTemplate also) -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#2a7aa1"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="#313f47"/>
                    <Setter Property="Foreground" Value="Azure"/>
                </Trigger>

                <!-- highlighting the selected row. used for jumping to the button that is pressed on the joystick -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="#26a0da"/>
                    <Setter Property="Background" Value="#2f4c5a"/>
                    <Setter Property="Foreground" Value="Azure"/>
                </Trigger>
            </Style.Triggers>

            <!-- highlight color (needs mouseover trigger)-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <GridViewRowPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Resources>

    <DockPanel Width="Auto" Height="Auto" LastChildFill="True" Background="#323232">
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="2,4,2,4" Height="32" Background="#323232">
            <Button Style="{StaticResource MenuButton}" Command="{Binding OpenFileCommand, IsAsync=True}">
                <Image Source="Images/open_32x32.png"/>
            </Button>
            <Button  Style="{StaticResource MenuButton}" Command="{Binding SaveFileCommand, IsAsync=True}">
                <Image Source="Images/save_blue_32x32.png"/>
            </Button>
            <Button  Style="{StaticResource MenuButton}" Command="{Binding SaveFileAsCommand, IsAsync=True}">
                <Image Source="Images/saveas_blue_32x32.png"/>
            </Button>
            <Button  Style="{StaticResource MenuButton}" Command="{Binding ExitApplicationCommand, IsAsync=True}">
                <Image Source="Images/cancel_blue_32x32.png"/>
            </Button>
            <Label Name="txtLastFile" VerticalAlignment="Center" Foreground="#7ac1ff" VerticalContentAlignment="Center" />
        </StackPanel>

        <!--d:DataContext="{d:DesignData Source=sample_data_CollectionViewModel.xaml}"-->
        <StackPanel  Orientation="Vertical" Margin="10,10,5,10" Width="300" VerticalAlignment="Top">
            <TextBlock Text="Select a device" FontSize="15" Foreground="#7ac1ff"/>
            <ListBox x:Name="lstDevices" DisplayMemberPath="Name" ItemsSource="{Binding Devices}" Height="250" FontSize="13" Background="Transparent" Foreground="Azure" BorderBrush="SlateGray"
            SelectionChanged="LstDevices_OnSelectionChanged"/>
            <TextBlock Text="Test" Margin="0,10,0,0" FontSize="15" Foreground="#7ac1ff"/>
            <TextBox Height="250" TextWrapping="Wrap" Foreground="Azure" CaretBrush="Azure" Background="Transparent" FontSize="12"></TextBox>

            <Canvas Name="canvas_x_axis_bar" Height="60" Width="200"/>
            <Canvas Name="canvas_x_axis_circle" Height="40" Width="40" Background="Transparent"/>

        </StackPanel>


        <!-- joystick X axis -->
        <ListBox ItemContainerStyle="{StaticResource ListBoxItemStyleNoHighlighting}" Margin="5,30,10,10" ScrollViewer.HorizontalScrollBarVisibility="Auto" Background="Transparent" BorderBrush="Transparent">
            <ItemsControl ItemsSource="{Binding Actions}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>

                        <Grid>
                            <!-- This grid allows the scrollbar on the ListBox to appear. otherwise, the stackpanel will expand to fit all children (so no scrollbar) and they will all clip off the edge-->
                            <StackPanel>
                                <Grid>
                                    <Label Style="{StaticResource RoundLabelStyle}" Content="X AXIS" Width="68" Height="52" Margin="2,0,2,0" FontSize="11"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Background="Transparent" BorderBrush="#2a7aa1" BorderThickness="3" Foreground="Azure"/>
                                    <Canvas Name="canvas_x_axis" Height="60" Width="100"/>
                                </Grid>
                                <TextBox Text="{Binding TimeInMilliseconds}" Width="66" HorizontalAlignment="Stretch" TextAlignment="Center" BorderBrush="#2a7aa1"/>
                            </StackPanel>
                        </Grid>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ListBox>


        <ListView ItemContainerStyle="{StaticResource CustomListViewItem}" AlternationCount="2" Margin="5,30,10,10" Name="gridMap" Background="#323232" Foreground="Azure">
            <ListView.View>
                <GridView>

                    <!-- Macro Name and Record Buttons-->
                    <GridViewColumn Width="Auto">
                        <GridViewColumnHeader Background="Azure" Content="Control"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>

                                <!-- First Column - button name and recording controls -->
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" >

                                    <!-- Macro Buttons-->
                                    <StackPanel Orientation="Horizontal"  VerticalAlignment="Center" Margin="0,20,0,0">

                                        <TextBox Text="{Binding ButtonName}" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Foreground="Azure" CaretBrush="Azure" Margin="1,0,2,0" Width="200" Height="30" FontSize="14" Background="Transparent" BorderBrush="Azure"/>

                                        <Button Style="{StaticResource MacroButton}" Command="{Binding RecordMacroStartCommandWithParameter, IsAsync=True}">
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image" BasedOn="{StaticResource MacroButtonImage}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsRecording}" Value="True">
                                                                <Setter Property="Source" Value="Images/cancel_black_32x32.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsRecording}" Value="False">
                                                                <Setter Property="Source" Value="Images/record_red_32x32.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>

                                        <Button Style="{StaticResource MacroButton}" Command="{Binding RecordMacroStopCommandWithParameter, IsAsync=True}">
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image" BasedOn="{StaticResource MacroButtonImage}">
                                                        <Setter Property="Source" Value="Images/stop_black_32x32.png"/>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>

                                        <Button Style="{StaticResource MacroButton}" Command="{Binding RecordMacroCancelCommandWithParameter, IsAsync=True}">
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image" BasedOn="{StaticResource MacroButtonImage}">
                                                        <Setter Property="Source" Value="Images/cancel_black_32x32.png"/>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                    </StackPanel>

                                    <!-- Macro Name Selection -->
                                    <!--<ComboBox Name="cmbMacroName" SelectionChanged="ActionList_OnSelectionChanged" Text="{Binding ActionName, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding DataContext.ActionList.MapCatalog, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}}" SelectedValuePath="Value" DisplayMemberPath="Key" IsEditable="True" HorizontalAlignment="Stretch" Margin="0,2,0,20" VerticalAlignment="Center"/>-->
                                    <ComboBox Name="cmbMacroName2" SelectionChanged="ActionList_OnSelectionChanged" Text="{Binding ActionName, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding DataContext.ActionCatalog.Catalog, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}}" DisplayMemberPath="ActionName" IsEditable="True" IsTextSearchEnabled="False" HorizontalAlignment="Stretch" Margin="0,2,0,20" VerticalAlignment="Center"/>

                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!--Action List-->
                    <GridViewColumn Width="500">
                        <GridViewColumnHeader Background="Azure" Content="Action"/>
                        <GridViewColumn.CellTemplate>

                            <DataTemplate>

                                <WrapPanel Orientation="Horizontal">

                                    <ListBox ItemContainerStyle="{StaticResource ListBoxItemStyleNoHighlighting}" ScrollViewer.HorizontalScrollBarVisibility="Auto" Background="Transparent" BorderBrush="Transparent">
                                        <ItemsControl ItemsSource="{Binding Actions}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>

                                                    <Grid>
                                                        <!-- This grid allows the scrollbar on the ListBox to appear. otherwise, the stackpanel will expand to fit all children (so no scrollbar) and they will all clip off the edge-->
                                                        <StackPanel>
                                                            <Grid>
                                                                <Label Style="{StaticResource RoundLabelStyle}" Width="68" Height="52" Margin="2,0,2,0" FontSize="11"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Background="Transparent" BorderBrush="#2a7aa1" BorderThickness="3" Foreground="Azure"/>
                                                                <Label Content="{Binding ScanCode}" Width="Auto" FontSize="12"  HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Background="Transparent" Foreground="Azure"/>

                                                                <Image Height="24" Width="24" VerticalAlignment="Center" Margin="0,18,0,0">
                                                                    <Image.Style>
                                                                        <Style TargetType="{x:Type Image}">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsKeyUp}" Value="False">
                                                                                    <Setter Property="Source" Value="Images/down_azure_32x32.png"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsKeyUp}" Value="True">
                                                                                    <Setter Property="Source" Value="Images/up_azure_32x32.png"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Image.Style>
                                                                </Image>
                                                            </Grid>
                                                            <TextBox Text="{Binding TimeInMilliseconds}" Width="66" HorizontalAlignment="Stretch" TextAlignment="Center" BorderBrush="#2a7aa1"/>
                                                        </StackPanel>
                                                    </Grid>

                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ListBox>

                                </WrapPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>


    </DockPanel>

</Window>
