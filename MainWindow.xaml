<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:SierraHOTAS.ViewModels"
        x:Class="SierraHOTAS.MainWindow"
        mc:Ignorable="d"
        Title="Sierra HOTAS" Height="900" Width="1220"
        KeyDown="Window_KeyDown">

    <Window.DataContext>
        <viewModel:HOTASCollectionViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style  x:Key="RoundLabelStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <DockPanel Width="Auto" Height="Auto" LastChildFill="True" Background="{StaticResource WindowBackgroundBrush}">
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="2,4,2,4" Height="32" Background="{StaticResource WindowBackgroundBrush}">
            <Button Style="{StaticResource MenuButton}" Command="{Binding OpenFileCommand, IsAsync=True}" ToolTip="Open Profile" ToolTipService.InitialShowDelay="800">
                <Image Source="Images/open_32x32.png"/>
            </Button>
            <Button  Style="{StaticResource MenuButton}" Command="{Binding SaveFileCommand, IsAsync=True}" ToolTip="Save" ToolTipService.InitialShowDelay="800">
                <Image Source="Images/save_blue_32x32.png"/>
            </Button>
            <Button  Style="{StaticResource MenuButton}" Command="{Binding SaveFileAsCommand, IsAsync=True}" ToolTip="Save As..." ToolTipService.InitialShowDelay="800">
                <Image Source="Images/saveas_blue_32x32.png"/>
            </Button>
            <Button  Style="{StaticResource MenuButton}" Command="{Binding ClearActiveProfileSetCommand, IsAsync=True}" ToolTip="Clear Active Profile Set" ToolTipService.InitialShowDelay="800">
                <Image Source="Images/cancel_blue_32x32.png"/>
            </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="10,0,0,0" Background="{StaticResource WindowBackgroundBrush}">
            <TextBlock Text="Active Profile Set:" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}"/>
            <TextBlock Name="txtLastFile" Text="{Binding ProfileSetFileName}" Margin="8,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource TextHeaderBrush}"/>
        </StackPanel>

        <DockPanel DockPanel.Dock="Left" Width="320" LastChildFill="True" Margin="10,10,5,10" Background="{StaticResource WindowBackgroundBrush}">
            <StackPanel DockPanel.Dock="Top">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Devices" FontSize="15" Foreground="{StaticResource TextHeaderBrush}" VerticalAlignment="Bottom"/>
                    <Button Style="{StaticResource RefreshButton}" Command="{Binding RefreshDeviceListCommand, IsAsync=True}" Margin="2,0,0,0" ToolTip="Rescan for devices" ToolTipService.InitialShowDelay="800">
                        <Button.Content>
                            <Image Source="Images/refresh_32x32.png"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
                <ListBox x:Name="lstDevices" DisplayMemberPath="Name" ItemsSource="{Binding Devices}" Height="150" FontSize="13" Background="Transparent" Foreground="{StaticResource TextBrush}" BorderBrush="SlateGray" SelectionChanged="LstDevices_OnSelectionChanged"/>
                <TextBlock Text="Test" Margin="0,10,0,0" FontSize="15" Foreground="{StaticResource TextHeaderBrush}"/>
                <TextBox x:Name="txtTestBox" Height="100" TextWrapping="Wrap" Foreground="{StaticResource TextBrush}" CaretBrush="{StaticResource TextBrush}" Background="Transparent" BorderBrush="{StaticResource GroupBorderBrush}" FontSize="14"></TextBox>
            </StackPanel>

            <StackPanel DockPanel.Dock="Top">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Mode Profiles" Margin="0,10,0,0" FontSize="15" Foreground="{StaticResource TextHeaderBrush}"/>
                    <DataGrid Name="ModeActivationGrid" ItemsSource="{Binding ModeActivationItems}" Height="125" Width="Auto" AutoGenerateColumns="False" Background="Transparent">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Mode" Binding="{Binding Mode}" MaxWidth="45"/>
                            <DataGridTextColumn Header="Profile" Binding="{Binding ProfileName}" Width="75"/>
                            <DataGridTextColumn Header="Button" Binding="{Binding ButtonName}" Width="90"/>
                            <DataGridTextColumn Header="Device" Binding="{Binding DeviceName}"  Width="105"/>
                        </DataGrid.Columns>
                        <DataGrid.ItemContainerStyle>
                            <Style TargetType="DataGridRow">
                                <EventSetter Event="Selected" Handler="ModeActivationGrid_Selected"/>
                            </Style>
                        </DataGrid.ItemContainerStyle>

                    </DataGrid>
                </StackPanel>
            </StackPanel>

            <StackPanel DockPanel.Dock="Top">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Activity" Margin="0,10,0,0" FontSize="15" Foreground="{StaticResource TextHeaderBrush}"/>
                    <Button Style="{StaticResource RefreshButton}" Command="{Binding ClearActivityListCommand, IsAsync=True}" Margin="2,0,0,0" ToolTip="Clear Activity" ToolTipService.InitialShowDelay="800">
                        <Button.Content>
                            <Image Source="Images/refresh_32x32.png"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </StackPanel>

            <ListBox ScrollViewer.CanContentScroll="False" ItemContainerStyle="{StaticResource ListBoxItemStyleNoHighlighting}" Background="Transparent" BorderBrush="{StaticResource GroupBorderBrush}">
                <ItemsControl ItemsSource="{Binding Activity}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <Grid>
                                <!-- This grid allows the scrollbar on the ListBox to appear. otherwise, the stackpanel will expand to fit all children (so no scrollbar) and they will all clip off the edge-->
                                <StackPanel Orientation="Horizontal">
                                    <Grid>
                                        <Label Style="{StaticResource RoundLabelStyle}" Width="48" Height="34" Margin="0,4,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Background="Transparent" BorderBrush="{StaticResource HoverBorderBrush}" BorderThickness="2" Foreground="{StaticResource TextBrush}"/>
                                        <Label Content="{Binding Key}" Width="Auto" FontSize="10"  HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Background="Transparent" Foreground="{StaticResource TextBrush}"/>

                                        <Image Height="20" Width="20" VerticalAlignment="Center" Margin="0,16,0,0">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsKeyUp}" Value="False">
                                                            <Setter Property="Source" Value="../Images/down_azure_32x32.png"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsKeyUp}" Value="True">
                                                            <Setter Property="Source" Value="../Images/up_azure_32x32.png"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Grid>
                                    <Label Content="{Binding Time}" ContentStringFormat="mm:ss:ff" Width="50" FontSize="10"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="{StaticResource TextBrush}"/>
                                    <Label Content="{Binding ButtonName}" Width="Auto" FontSize="10"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="{StaticResource TextBrush}"/>
                                    <Label Content="{Binding ActionName}" Width="Auto" FontSize="10"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="{StaticResource TextBrush}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ListBox>

        </DockPanel>





        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="2,4,2,4" Height="32" Background="{StaticResource WindowBackgroundBrush}">
            <CheckBox Content="Snap to Button" IsChecked="{Binding SnapToButton}" Margin="4,0,0,0" ToolTip="When checked, will automatically highlight and focus the activated button" ToolTipService.InitialShowDelay="800" ToolTipService.ShowDuration="8000"/>
            <TextBlock Text="Create New Mode" Foreground="{StaticResource TextBrush}" VerticalAlignment="Center"/>
            <Button Style="{StaticResource RefreshButton}" Command="{Binding CreateNewModeProfileCommand, IsAsync=True}" Margin="2,0,0,0" ToolTip="Create a new mode" ToolTipService.InitialShowDelay="800">
                <Button.Content>
                    <Image Source="Images/refresh_32x32.png"/>
                </Button.Content>
            </Button>
        </StackPanel>
        <ListView Name="gridMap" 
                  ItemsSource="{Binding}" 
                  Style="{StaticResource CustomListView}"
                  ItemContainerStyle="{StaticResource CustomButtonListViewItem}" 
                  AlternationCount="2" 
                  Margin="5,-10,10,10"/>

    </DockPanel>

</Window>
